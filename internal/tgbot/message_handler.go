package tgbot

import (
	"fmt"
	"net/url"

	"github.com/av1ppp/dada-ptizza_tg-bot/internal/parser"
	"github.com/av1ppp/dada-ptizza_tg-bot/internal/parser/instagram"
	"github.com/av1ppp/dada-ptizza_tg-bot/internal/parser/vk"
	"github.com/av1ppp/dada-ptizza_tg-bot/internal/yoomoney"
	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api"
)

func (bot *Bot) handleMessage(message string, update *tgbotapi.Update, ds *DialogState) {
	// TODO if ds.SocicalNetwork == ""

	chatID := update.Message.Chat.ID

	if ds.SocicalNetwork == "" {
		return
	}

	u, err := url.Parse(message)
	if err != nil {
		msg := tgbotapi.NewMessage(chatID, "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Å—Å—ã–ª–∫–∏")
		bot.sendAndSave(msg)
		return
	}

	var ui *parser.UserInfo

	switch ds.SocicalNetwork {
	case "instagram":
		ui, err = instagram.GetUserInfo(u, bot.instagramApi)
		if err != nil {
			bot.sendUserNotFound(chatID)
			return
		}
	case "vkontakte":
		ui, err = vk.GetUserInfo(u, bot.vkApi)
		if err != nil {
			bot.sendUserNotFound(chatID)
			return
		}
	}

	bot.sendUserInfoAndBuyKeyboard(chatID, ui, ds)

}

func (bot *Bot) sendRequestError(chatID int64, err error) {
	fmt.Println("–û—à–∏–±–∫–∞:", err)
	msg := tgbotapi.NewMessage(chatID, "–í–æ –≤—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µ.")
	bot.Send(msg)
}

func (bot *Bot) sendUserNotFound(chatID int64) {
	msg := tgbotapi.NewMessage(chatID, "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ‚òπÔ∏è")
	bot.sendAndSave(msg)
}

// –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –≤—ã–±–æ—Ä–æ–º –æ–ø–ª–∞—Ç—ã
func (bot *Bot) getBuyKeyboard(ds *DialogState) (*tgbotapi.InlineKeyboardMarkup, error) {
	// TODO: add accountInfo cache
	accountInfoResp, err := bot.yoomoneyApi.CallAccountInfo()
	if err != nil {
		return nil, err
	}

	createFormResp, err := bot.yoomoneyApi.CreateFormURL(yoomoney.CreateFormOptions{
		PaymentType:  "AC",
		Receiver:     accountInfoResp.Account,
		QuickpayForm: "shop",

		FormComment: "–¢–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç",
		ShortDest:   "–¢–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç",

		Label:   ds.Label,
		Targets: "–û–ø–ª–∞—Ç–∞ | –¢–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç",
		Sum:     ds.Price,
	})
	if err != nil {
		return nil, err
	}

	buyKeyboard := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonURL(fmt.Sprintf("–û–ø–ª–∞—Ç–∞ | %.1f‚ÇΩ üí≥", ds.Price), createFormResp.TempURL.String()),
			// TODO: –î–æ–±–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫—É –¥–ª—è –æ–ø–ª–∞—Ç—ã
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("–ü—Ä–æ–≤–µ—Ä–∏—Ç—å", "check_payment"),
		),
	)

	return &buyKeyboard, nil
}

// –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞–π–¥–µ–Ω–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
func (bot *Bot) sendUserInfoAndBuyKeyboard(chatID int64, ui *parser.UserInfo, ds *DialogState) {
	fileBytes := tgbotapi.FileBytes{Name: ui.Picture.Filename, Bytes: *ui.Picture.Data}

	buyKeyboard, err := bot.getBuyKeyboard(ds)
	if err != nil {
		bot.sendRequestError(chatID, err)
		return
	}

	msg := tgbotapi.NewPhotoUpload(chatID, fileBytes)
	msg.Caption = "**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω:**\n\n" +
		"*–ò–º—è: " + ui.FullName + "*\n\n„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è\n\n" +
		"üîû _–ü—Ä–∏–≤–∞—Ç–Ω—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ?\n" +
		"‚õîÔ∏è –°–∫—Ä—ã—Ç—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ?\n" +
		"üë• –°–∫—Ä—ã—Ç—ã–µ –¥—Ä—É–∑—å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ?_\n\n"
	msg.ParseMode = "MarkdownV2"
	msg.ReplyMarkup = buyKeyboard

	bot.Send(msg)
}
